openapi: 3.0.0
info:
  title: API Registry Service
  description: A centralized registry for API specifications across the Solid Microservices ecosystem
  version: 1.0.0
servers:
  - url: 'http://localhost:3005'
    description: Local development server
  - url: 'http://api-registry:3005'
    description: Docker container
paths:
  /specs:
    get:
      summary: List API Specifications
      description: Lists all registered API specifications
      parameters:
        - name: serviceName
          in: query
          schema:
            type: string
          description: Filter by service name
        - name: version
          in: query
          schema:
            type: string
          description: Filter by version
        - name: deprecated
          in: query
          schema:
            type: boolean
          description: Filter by deprecated status
      responses:
        '200':
          description: Successfully retrieved specifications list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SpecInfo'
    post:
      summary: Register API Specification
      description: Registers a new API specification or updates an existing one
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpecRegistrationRequest'
      responses:
        '201':
          description: Specification registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecRegistrationResponse'
        '400':
          description: Invalid request body or specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - Invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /specs/{serviceName}/{version}:
    get:
      summary: Get API Specification
      description: Retrieves a specific API specification
      parameters:
        - name: serviceName
          in: path
          required: true
          schema:
            type: string
          description: Name of the service
        - name: version
          in: path
          required: true
          schema:
            type: string
          description: Version of the API
      responses:
        '200':
          description: Successfully retrieved specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spec'
        '404':
          description: Specification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete API Specification
      description: Deletes a specific API specification
      security:
        - apiKey: []
      parameters:
        - name: serviceName
          in: path
          required: true
          schema:
            type: string
          description: Name of the service
        - name: version
          in: path
          required: true
          schema:
            type: string
          description: Version of the API
      responses:
        '204':
          description: Specification deleted successfully
        '401':
          description: Unauthorized - Invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Specification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /specs/{serviceName}/{version}/deprecate:
    patch:
      summary: Mark API as Deprecated
      description: Marks an API specification as deprecated
      security:
        - apiKey: []
      parameters:
        - name: serviceName
          in: path
          required: true
          schema:
            type: string
          description: Name of the service
        - name: version
          in: path
          required: true
          schema:
            type: string
          description: Version of the API
      responses:
        '200':
          description: Specification marked as deprecated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpecDeprecationResponse'
        '401':
          description: Unauthorized - Invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Specification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /specs/{serviceName}/latest:
    get:
      summary: Get Latest API Specification
      description: Retrieves the latest version of an API specification
      parameters:
        - name: serviceName
          in: path
          required: true
          schema:
            type: string
          description: Name of the service
      responses:
        '200':
          description: Successfully retrieved latest specification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Spec'
        '404':
          description: Specification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /specs/validate:
    post:
      summary: Validate API Specification
      description: Validates an OpenAPI specification against standards
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: OpenAPI specification object
      responses:
        '200':
          description: Validation result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResult'
  /services:
    get:
      summary: List Services
      description: Lists all registered services
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum: [active, maintenance, deprecated]
          description: Filter by service status
        - name: owner
          in: query
          schema:
            type: string
          description: Filter by service owner
      responses:
        '200':
          description: Successfully retrieved services list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceSummary'
    post:
      summary: Register Service
      description: Registers a new service in the registry
      security:
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceRegistrationRequest'
      responses:
        '201':
          description: Service registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - Invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Service already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services/{serviceName}:
    get:
      summary: Get Service Details
      description: Gets details about a registered service
      parameters:
        - name: serviceName
          in: path
          required: true
          schema:
            type: string
          description: Name of the service
      responses:
        '200':
          description: Successfully retrieved service details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceDetails'
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /services/{serviceName}/status:
    patch:
      summary: Update Service Status
      description: Updates the status of a service
      security:
        - apiKey: []
      parameters:
        - name: serviceName
          in: path
          required: true
          schema:
            type: string
          description: Name of the service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum: [active, maintenance, deprecated]
                  description: New status for the service
      responses:
        '200':
          description: Service status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '400':
          description: Invalid status value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized - Invalid API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Service not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /health:
    get:
      summary: Health Check
      description: Returns the health status of the service
      responses:
        '200':
          description: Service health information
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  service:
                    type: string
                    example: api-registry
                  version:
                    type: string
                    example: 1.0.0
                  timestamp:
                    type: string
                    format: date-time
                  features:
                    type: object
                    properties:
                      apiKeyAuth:
                        type: boolean
                      didAuth:
                        type: boolean
                      gitStorage:
                        type: boolean
components:
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: x-api-key
  schemas:
    SpecRegistrationRequest:
      type: object
      required:
        - serviceName
        - version
        - specification
      properties:
        serviceName:
          type: string
          description: Name of the service
        version:
          type: string
          description: Semantic version of the API
        specification:
          type: object
          description: OpenAPI specification object
        description:
          type: string
          description: Optional description of the API
        deprecated:
          type: boolean
          description: Optional flag to mark as deprecated
          default: false
    SpecRegistrationResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique ID for the specification
        serviceName:
          type: string
        version:
          type: string
        description:
          type: string
        url:
          type: string
          description: URL to access the specification
        docsUrl:
          type: string
          description: URL to access the Swagger UI docs
        deprecated:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SpecInfo:
      type: object
      properties:
        id:
          type: string
        serviceName:
          type: string
        version:
          type: string
        description:
          type: string
        url:
          type: string
        docsUrl:
          type: string
        deprecated:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Spec:
      type: object
      properties:
        id:
          type: string
        serviceName:
          type: string
        version:
          type: string
        specification:
          type: object
          description: OpenAPI specification object
        description:
          type: string
        url:
          type: string
        docsUrl:
          type: string
        deprecated:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SpecDeprecationResponse:
      type: object
      properties:
        id:
          type: string
        serviceName:
          type: string
        version:
          type: string
        deprecated:
          type: boolean
        updatedAt:
          type: string
          format: date-time
    ValidationResult:
      type: object
      properties:
        valid:
          type: boolean
        errors:
          type: array
          items:
            type: string
    ServiceRegistrationRequest:
      type: object
      required:
        - name
        - baseUrl
      properties:
        name:
          type: string
          description: Name of the service
        description:
          type: string
          description: Description of the service
        baseUrl:
          type: string
          description: Base URL for the service
        healthCheckUrl:
          type: string
          description: Health check URL for the service
        status:
          type: string
          enum: [active, maintenance, deprecated]
          default: active
          description: Status of the service
        owner:
          type: string
          description: Owner of the service
        documentation:
          type: string
          description: URL to service documentation
    Service:
      type: object
      properties:
        id:
          type: string
          description: Unique ID for the service
        name:
          type: string
          description: Name of the service
        description:
          type: string
          description: Description of the service
        baseUrl:
          type: string
          description: Base URL for the service
        healthCheckUrl:
          type: string
          description: Health check URL for the service
        status:
          type: string
          enum: [active, maintenance, deprecated]
          description: Status of the service
        owner:
          type: string
          description: Owner of the service
        documentation:
          type: string
          description: URL to service documentation
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ServiceSummary:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        baseUrl:
          type: string
        status:
          type: string
          enum: [active, maintenance, deprecated]
        latestSpec:
          type: object
          properties:
            version:
              type: string
            url:
              type: string
            docsUrl:
              type: string
    ServiceDetails:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        baseUrl:
          type: string
        healthCheckUrl:
          type: string
        status:
          type: string
          enum: [active, maintenance, deprecated]
        owner:
          type: string
        documentation:
          type: string
        specs:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              version:
                type: string
              url:
                type: string
              docsUrl:
                type: string
              deprecated:
                type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
